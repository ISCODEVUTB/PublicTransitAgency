name: Escaneo Completo API OWASP ZAP

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Levanta el contenedor FastAPI
        run: |
          docker pull gitzerohub/publictransitagency:latest
          docker run -d --name app -p 8000:8000 \
            -e HOST=${{ secrets.HOST }} \
            -e PORT=${{ secrets.PORT }} \
            -e DB=${{ secrets.DB }} \
            -e USER=${{ secrets.USER }} \
            -e PASSWORD=${{ secrets.PASSWORD }} \
            gitzerohub/publictransitagency:latest
          sleep 25

      - name: Espera que la API esté lista
        run: |
          for i in {1..20}; do
            curl -f http://localhost:8000/openapi.json && break
            echo "Esperando..."
            sleep 5
          done

      - name: Descarga y muestra el esquema OpenAPI
        run: |
          curl -o openapi.json http://localhost:8000/openapi.json
          ls -lh openapi.json
          head -30 openapi.json
          jq . < openapi.json || echo "No es JSON válido"

      - name: Da permisos de escritura al workspace
        run: sudo chmod -R 777 ${{ github.workspace }}

      - name: Escanear toda la API con OWASP ZAP usando OpenAPI (archivo local)
        run: |
          docker run --name zapscan \
            -v ${{ github.workspace }}:/zap/wrk \
            -w /zap/wrk \
            ghcr.io/zaproxy/zaproxy:stable zap-api-scan.py \
              -d \
              -f openapi \
              -t /zap/wrk/openapi.json \
              -J report_json.json \
              -w report_md.md \
              -r report_html.html
          docker logs zapscan || echo "No logs disponibles"
          docker rm -f zapscan || true

      - name: Sube los reportes como artifact
        uses: actions/upload-artifact@v4
        with:
          name: zap-reportes
          path: |
            report_html.html
            report_md.md
            report_json.json
